/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <53 54>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_hrm_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC     &kp N1  &kp N2  &kp N3            &kp N4              &kp N5                                   &kp N6           &kp N7       &kp N8             &kp N9   &kp N0         &kp DELETE
&kp TAB     &kp Q   &kp W   &kp E             &kp R               &kp T                                    &kp Y            &kp U        &kp I              &kp O    &kp P          &kp BACKSPACE
&kp LSHIFT  &kp A   &kp S   &mt LEFT_SHIFT D  &mt LEFT_CONTROL F  &kp G                                    &kp H            &mt RCTRL J  &mt RIGHT_SHIFT K  &kp L    &kp SEMICOLON  &kp SQT
&kp LCTRL   &kp Z   &kp X   &kp C             &kp V               &kp B            &kp ENTER    &to 1      &kp N            &kp M        &kp COMMA          &kp DOT  &kp FSLH       &kp RSHFT
                            &kp LALT          &kp LGUI            &lt 2 BACKSPACE  &kp SPACE    &kp SPACE  &lt 3 BACKSPACE  &kp ENTER    &kp RCTRL
            >;
        };

        qwerty_layer {
            bindings = <
&kp ESC     &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                        &kp N6           &kp N7         &kp N8     &kp N9   &kp N0    &kp DELETE
&kp TAB     &kp Q   &kp W   &kp E     &kp R     &kp T                         &kp Y            &kp U          &kp I      &kp O    &kp P     &kp BACKSPACE
&kp LSHIFT  &kp A   &kp S   &kp D     &kp F     &kp G                         &kp H            &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z   &kp X   &kp C     &kp V     &kp B   &kp LBKT     &to 0    &kp N            &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                            &kp LALT  &kp LGUI  &mo 2   &kp SPACE    &kp RET  &lt 3 BACKSPACE  &kp BACKSPACE  &kp RCTRL
            >;
        };

        symbol_layer {
            bindings = <
&trans  &trans         &trans      &trans        &trans         &trans                           &trans         &trans         &trans        &trans        &trans         &trans
&trans  &kp GRAVE      &kp LS(LT)  &kp LS(GT)    &kp LS(DQT)    &kp SQT                          &kp LS(AMPS)   &kp LS(COLON)  &kp LBKT      &kp RBKT      &kp LS(UNDER)  &trans
&trans  &kp LS(EXCL)   &kp MINUS   &kp LS(PLUS)  &kp EQUAL      &kp LS(POUND)                    &kp LS(PIPE)   &kp SEMI       &kp LS(LBRC)  &kp LS(RBRC)  &kp LS(QMARK)  &trans
&trans  &kp LS(TILDE)  &kp FSLH    &kp LS(STAR)  &kp LS(PRCNT)  &kp LS(AT)     &trans    &trans  &kp LS(CARET)  &kp LS(DLLR)   &kp LS(LPAR)  &kp LS(RPAR)  &kp FSLH       &trans
                                   &trans        &trans         &trans         &trans    &trans  &trans         &trans         &trans
            >;
        };

        navigation_layer {
            bindings = <
&trans  &trans        &trans     &trans        &trans   &trans                         &trans  &trans     &trans     &trans        &trans     &trans
&trans  &trans        &trans     &trans        &trans   &trans                         &trans  &kp HOME   &kp PG_DN  &kp PG_UP     &kp END    &trans
&trans  &kp LEFT_GUI  &kp LCTRL  &kp LEFT_ALT  &kp TAB  &kp LA(TAB)                    &trans  &kp LEFT   &kp DOWN   &kp UP_ARROW  &kp RIGHT  &trans
&trans  &trans        &trans     &trans        &trans   &trans       &trans    &trans  &trans  &kp RSHFT  &kp RALT   &trans        &trans     &trans
                                 &trans        &trans   &trans       &trans    &trans  &trans  &trans     &trans
            >;
        };

        config_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        config_conditional {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
